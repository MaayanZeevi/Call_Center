<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
    <meta charset="utf-8">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
          integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
    <!--    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.js"-->
    <!--            integrity="sha512-U3hGSfg6tQWADDQL2TUZwdVSVDxUt2HZ6IMEIskuBizSDzoe65K3ZwEybo0JOcEjZWtWY3OJzouhmlGop+/dBg=="-->
    <!--            crossorigin="anonymous" referrerpolicy="no-referrer"></script>-->

    <script src="/socket.io/socket.io.js"></script>
    <script src="./DataController.js"></script>
    <script src="./redisController.js"></script>

    <title style="color: red;">
        Dashboard
    </title>
</head>
<body onload="initSocket()" class="p-3 mb-2 text-black" style="background-color:rgb(174, 201, 235);">

<h1 style="text-align:center; padding-bottom: 50px; padding-top: 50px; font-size: 450%"><b>Dashboard</b></h1>
<div class="container">
    <div class="row">
        <div class="col-6 chart">
            <canvas id="SnapShotChartTotals" width="500px" height="0"></canvas>
        </div>
        <div class="col-6 chart">
            <canvas id="SnapShotChartAvg" width="500px" height="0"></canvas>
        </div>
    </div>
    <div class="row" style=" padding-bottom: 20px;">
        <!--        <link rel="stylesheet" href="./ShowData.css">-->
        <table class="table table-bordered border" style="background-color:rgb(152,181,224);" id="SnapShotTable" >
            <thead class="AggregetionTableHead">
            <tr>
                <th scope="col" style="width: 500px;">Time: <h4></h4></th>
                <th scope="col" style="width: 500px;">Number of waiting calls:(per seconds) <h3></h3></th>
                <th scope="col" style="width: 500px;"> Average Waiting times: <h2></h2></th>
            </tr>
            </thead>
            <tbody class="AggregetionTableBody">

            </tbody>
        </table>

    </div>
    <div class="column" style="padding-top: 30px;">
        <div class="col-15 chart">
            <p style="text-align: center; font: bold;"><b>Number of waiting calls at 5 minutes intervals</b></p>
            <canvas id="waitingCalls5minChart" width="500px" height=150></canvas>

            <script>
                var xValues = [0];//[0,1,2,3];
                var yValues = [0];//[0,13,0,23];
                // upduat to now

                async function chartWaitingCalls5(data) {
                    await updateWaitingCalls5(data);

                    new Chart("waitingCalls5minChart", {
                        type: "line",
                        data: {
                            labels: xValues,
                            datasets: [{
                                fill: false,
                                lineTension: 0,
                                backgroundColor: "rgb(248,19,19)",
                                borderColor: "rgb(244,244,245)",
                                data: yValues
                            }]
                        },
                        options: {
                            legend: {display: false},
                            // scales: {
                            //     yAxes: [{ticks: {min: 0, max: 40}}],
                            //     xAxes: [{ticks: {min: 0, max: 24}}],
                            // }
                        }
                    });
                }

                function updateWaitingCalls5(data) {
                    xValues.push(data[0] + ":" + data[1]);
                    yValues.push(data[2]);
                }

            </script>

        </div>
        <div class="col-15 chart">
            <p style="text-align: center; font: bold;"><b>Waiting times average at 5 minutes intervals</b></p>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
            <body>
            <canvas id="waitingTime5minChart" width="500px" height=150></canvas>

            <script>

                var xValues1 = [0];//[0,1,2,3];
                var yValues1 = [0];//[0,13,0,23];
                // upduat to now

                async function chartAvgWaiting5(data) {
                    await updateAvgWaiting5(data);

                    new Chart("waitingTime5minChart", {
                        type: "line",
                        data: {
                            labels: xValues1,
                            datasets: [{
                                fill: false,
                                lineTension: 0,
                                backgroundColor: "rgb(248,19,19)",
                                borderColor: "rgb(244,244,245)",
                                data: yValues1
                            }]
                        },
                        options: {
                            legend: {display: false},
                            // scales: {
                            //     yAxes: [{ticks: {min: 0, max: 40}}],
                            //     xAxes: [{ticks: {min: 0, max: 24}}],
                            // }
                        }
                    });
                }

                function updateAvgWaiting5(data) {
                    xValues1.push(data[0] + ":" + data[1]);
                    yValues1.push(data[2]);
                }

            </script>

        </div>
    </div>
    <p style="text-align: center;"><b>Amount calls of each topic for all day:</b></p>
    <div class="col-15 chart">
        <canvas id="myChart" style = " top: 0px; left: 0px; right: 0px; bottom: 0px;  "></canvas>

        <script>


            var xValues2 = ["Joining", "Service", "Complaint", "Disconnection"];
            var yValues2 = [20, 2, 2, 1];
            var barColors = [
                "#b91d47",
                "#00aba9",
                "#2b5797",
                "#e8c3b9"
            ];

            async function chartCake(data) {
                await setTopicsAmount(data);
                new Chart("myChart", {
                    type: "pie",
                    data: {
                        labels: xValues2,
                        datasets: [{
                            backgroundColor: barColors,
                            data: yValues2
                        }]
                    },
                    options: {
                        title: {
                            // display: true,
                            // text: "Amount calls of each topic for all day:",
                        }
                    }
                });
            }

            function setTopicsAmount(data) {
                yValues2[0] = data.joining;
                yValues2[1] = data.service;
                yValues2[2] = data.complaint;
                yValues2[3] = data.disconnection;
            }

        </script>
    </div>
    <script>
        var socket = io.connect();

        function initSocket() {
            socket.on('avgWaitingTime', function (msg) {
                document.querySelector('h2').innerHTML = msg;
            })

            socket.on('avgWaitingTime5min', function (msg) {
                chartAvgWaiting5(msg);
            })

            socket.on('totalWaitingCalls', function (msg) {
                document.querySelector('h3').innerHTML = msg;
            })
            socket.on('currTime', function (msg) {
                document.querySelector('h4').innerHTML = msg;
            })
            socket.on('topic', function (msg) {
                chartCake(msg);

            })
            socket.on('totalWaitingCallsEvery5Min', function (msg) {
                chartWaitingCalls5(msg);

            })

        }
    </script>


</body>
</html>